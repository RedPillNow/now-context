{"version":3,"sources":["now-context-worker.ts"],"names":[],"mappings":"AAaA,SAAS,GAAG,CAAC,MAAM,EAAE,EAAE;IAEtB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC;SAC3D,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAEjB,IAAI,IAAI,GAAQ;YACf,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC/B,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;YACnC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;YACtC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM;YAC1B,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;YAClC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;YAC5C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;YAC9B,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;YAC5B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;SAC1B,CAAC;QACF,IAAI,WAAW,GAAQ;YACtB,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;SACd,CAAA;QACD,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AACL,CAAC,CAAA;AAQD,qBAAqB,MAAc,EAAE,GAAW,EAAE,YAAa;IAC9D,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,YAAY,GAAG,YAAY,IAAI,MAAM,CAAC;QAC1C,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5B,GAAG,CAAC,MAAM,GAAG,UAAU,GAAQ;YAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC3C,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC;oBACN,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,UAAU,EAAE,GAAG,CAAC,UAAU;iBAC1B,CAAC,CAAC;YACJ,CAAC;QACF,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;AACJ,CAAC","file":"now-context-worker.js","sourcesContent":["\n/**\n * The message listener. This is the entry point into\n * the worker and where all requests must start\n * @param {any} msgEvt\n * @property {any} msgEvt.data\n * @property {string} msgEvt.data.type The type of request we're making\n * @property {string} msgEvt.data.url The URL to use for the request\n * @returns {any} returnObj\n * @property {string} returnObj.type The type of request this was (msgEvt.data.type)\n * @property {any} returnObj.response The response from the request\n * @listens message\n */\nonmessage = (msgEvt) => {\n\t// console.log('now-context-worker.onmessage', msgEvt);\n\tlet data = msgEvt.data;\n\tlet detail = data.detail;\n\tmakeRequest(data.type.toUpperCase(), detail.ajax.url, 'json')\n\t\t.then((xhrData) => {\n\t\t\t// console.log('worker.onmessage.then', xhrData);\n\t\t\tlet ajax: any = {\n\t\t\t\tmethod: data.type.toUpperCase(),\n\t\t\t\trequestUrl: xhrData.xhr.responseURL,\n\t\t\t\tresponseType: xhrData.xhr.responseType,\n\t\t\t\tstatus: xhrData.xhr.status,\n\t\t\t\tstatusText: xhrData.xhr.statusText,\n\t\t\t\twithCredentials: xhrData.xhr.withCredentials,\n\t\t\t\tresponse: xhrData.xhr.response,\n\t\t\t\tpayload: detail.ajax.payload,\n\t\t\t\tparams: detail.ajax.params\n\t\t\t};\n\t\t\tlet responseObj: any = {\n\t\t\t\tajax: ajax,\n\t\t\t\tdetail: detail\n\t\t\t}\n\t\t\tpostMessage(responseObj, responseObj.aBuf);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err);\n\t\t});\n}\n/**\n * Makes a request to the server and returns a promise\n * @param {string} method\n * @param {string} url\n * @param {string} responseType\n * @returns {Promise}\n */\nfunction makeRequest(method: string, url: string, responseType?): any {\n\treturn new Promise((resolve, reject) => {\n\t\tlet xhr = new XMLHttpRequest();\n\t\txhr.responseType = responseType || 'json';\n\t\txhr.open(method, url, true);\n\t\txhr.onload = function (evt: any) {\n\t\t\tif (xhr.status >= 200 && xhr.status < 300) {\n\t\t\t\tresolve({ xhr: xhr, response: xhr.response });\n\t\t\t} else {\n\t\t\t\treject({\n\t\t\t\t\tstatus: xhr.status,\n\t\t\t\t\tstatusText: xhr.statusText\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\txhr.send();\n\t});\n}\n"]}